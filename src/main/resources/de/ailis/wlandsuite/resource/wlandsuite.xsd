<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  - $Id: schema.xsd,v 1.23 2006/08/18 10:42:26 a.koch Exp $
  - Copyright (C) 2006 Klaus Reimer <k@ailis.de>
  - 
  - Permission is hereby granted, free of charge, to any person obtaining a copy
  - of this software and associated documentation files (the "Software"), to
  - deal in the Software without restriction, including without limitation the
  - rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
  - sell copies of the Software, and to permit persons to whom the Software is
  - furnished to do so, subject to the following conditions:
  - 
  - The above copyright notice and this permission notice shall be included in
  - all copies or substantial portions of the Software.
  - 
  - THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  - IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  - FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  - AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  - LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  - FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
  - IN THE SOFTWARE.
  -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
           xmlns="http://ailis.de/wlandsuite"
           targetNamespace="http://ailis.de/wlandsuite"
           elementFormDefault="qualified">
    

    <xs:element name="map" type="Map">
        <xs:annotation>
            <xs:documentation>
                The root element of the map file.
            </xs:documentation>
        </xs:annotation>
    </xs:element>



    <xs:complexType name="Map">
        <xs:sequence>
            <xs:element name="actionClassMap" type="NibbleMap" minOccurs="1"
                maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        The action class map defines the action classes per
                        square. You can use the hexadecimal values 0-f for the
                        classes. For 0 you can also use a dot to improve
                        readability.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="actionMap" type="ByteMap" minOccurs="1"
                maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        The action map defines the actions per square. You can
                        use the hexadecimal values 00-ff for each square. For 00
                        you can also use two dots (..) to improve readability.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="info" type="Info" minOccurs="1" maxOccurs="1"></xs:element>

            <xs:element name="battleStrings" type="BattleStrings" minOccurs="1"
                maxOccurs="1">
            </xs:element>
            <xs:element name="actions" type="Actions" minOccurs="0"
                maxOccurs="15">
                <xs:annotation>
                    <xs:documentation>
                        Defines the actions for a specific action class.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="npcs" type="NPCs" maxOccurs="1" minOccurs="0"></xs:element>
            <xs:element name="monsters" type="Monsters" maxOccurs="1"
                minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        The monsters on this map. Used for fixed and random
                        encounters.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="strings" type="Strings" maxOccurs="1"
                minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        The list of message strings.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="tileMap" type="TileMap" maxOccurs="1" minOccurs="1">
                <xs:annotation>
                    <xs:documentation>The tile map defines which tile should be drawn on each square. You can define two dots (..) as a placeholder for the background tile of the map  for better readability.</xs:documentation>
                </xs:annotation></xs:element>
        </xs:sequence>
        <xs:attribute name="mapSize" use="required">
            <xs:annotation>
                <xs:documentation>
                    The map size. Must be 32 or 64. If you are editing a map of
                    the original game and want to create game files that work
                    with the original game then you can't change this value.
                </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:nonNegativeInteger">
                    <xs:enumeration value="32"></xs:enumeration>
                    <xs:enumeration value="64"></xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="msqSize" type="xs:nonNegativeInteger" use="optional">
            <xs:annotation>
                <xs:documentation>
                    The MSQ block size of this map. This is only needed when you
                    are editing an original map and want to be able to create a
                    game file for the original game. If you intend to use this
                    map with Displacers hacked EXE then you must remove this
                    attribute.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="tilemapOffset" type="xs:nonNegativeInteger" use="optional">
            <xs:annotation>
                <xs:documentation>The offset where the tilemap begins in the game. This is only needed if you are editing a map of the original game and want to create game files that work with the original game.</xs:documentation>
            </xs:annotation></xs:attribute>
    </xs:complexType>





    <xs:simpleType name="NibbleMap">
        <xs:restriction base="xs:string">
            <xs:pattern value="\s*([0-9a-fA-F.]{64}\s*){64}"></xs:pattern>
            <xs:pattern value="\s*([0-9a-fA-F.]{32}\s*){32}"></xs:pattern>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="ByteMap">
        <xs:restriction base="xs:string">
            <xs:pattern
                value="\s*(([0-9a-fA-F.]{2}\s+){64}){63}([0-9a-fA-F.]{2}\s+){63}[0-9a-fA-F.]{2}\s*">
            </xs:pattern>
            <xs:pattern
                value="\s*(([0-9a-fA-F.]{2}\s+){32}){31}([0-9a-fA-F.]{2}\s+){31}[0-9a-fA-F.]{2}\s*">
            </xs:pattern>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="Info">
        <xs:sequence></xs:sequence>
        <xs:attribute name="tileset" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>
                    Defines which tileset to use. 0 means the first tileset in
                    allhtds1, 4 means the first tileset in allhtds2.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="backgroundTile" type="Byte">
            <xs:annotation>
                <xs:documentation>
                    Defines which tile to use for the background. Background is
                    the frame around the map which you can see when you travel
                    to the edge of a map. This attribute is optional and
                    defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="timeFactor" type="Word">
            <xs:annotation>
                <xs:documentation>
                    Defines the time factor of the map. This means how much time
                    passes when you move on square. 256 (0x100) means one
                    minute. This is also the default when this attribute is not
                    present.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="encounterFrequency" type="Byte">
            <xs:annotation>
                <xs:documentation>
                    The encounter frequency defines how often a random encounter
                    occures. 0 means no random encounters. 1 means random
                    encounter on each step. The higher the value the more seldem
                    random encounters are. This attribute is optional and
                    defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="lastMonster" type="Byte">
            <xs:annotation>
                <xs:documentation>
                    Defines the last monster in the monster list which is used
                    for random encounters. Be careful not to use value 0 for this attribute when encounterFrequency is not 0, too, because this will end in a division by zero error in the game. This attribute is optional and
                    defaults to 1 which means just the first monster is used in
                    random encounters.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="maxEncounters" type="Byte">
            <xs:annotation>
                <xs:documentation>The maximum number of encounters which can take place at once on this map. This value must be lower or equal the number of actions in action class 15 (0xF) because these "actions" (which are not really actions) are used to save the state of unfinished encounters.
This attribute is optional and defaults to 1.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="unknown0" type="Byte">
            <xs:annotation>
                <xs:documentation>
                    The unknown byte number 0 in the info block. If you know
                    what it does then please contact me: k@ailis.de. This value
                    is optional and defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="unknown1" type="Byte">
            <xs:annotation>
                <xs:documentation>
                    The unknown byte number 1 in the info block. If you know
                    what it does then please contact me: k@ailis.de. This value
                    is optional and defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="unknown9" type="Byte">
            <xs:annotation>
                <xs:documentation>
                    The unknown byte number 9 in the info block. If you know
                    what it does then please contact me: k@ailis.de. This value
                    is optional and defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:simpleType name="Byte">
        <xs:annotation>
            <xs:documentation>A 8 bit value. Can be written in decimal (for example: 255), in hexadecimal (for example: 0xff) and in binary (for example: 01010010b)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="0x[0-9a-fA-F]{1,2}"></xs:pattern>
            <xs:pattern value="[0-1]{1,8}b"></xs:pattern>
            <xs:pattern value="(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)"></xs:pattern>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Word">
        <xs:annotation>
            <xs:documentation>
                A 16 bit value. Can be written in decimal (for example: 65535),
                in hexadecimal (for example: 0xffff) and in binary (for example:
                101001010b)
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="0x[0-9a-fA-F]{1,4}"></xs:pattern>
            <xs:pattern value="[0-1]{1,16}b"></xs:pattern>
            <xs:pattern value="(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[0-5]?[0-9]{0,4})"></xs:pattern>
        </xs:restriction>
    </xs:simpleType>


    <xs:complexType name="BattleStrings">
        <xs:annotation>
            <xs:documentation>Defines the strings used during battle. Currently the exact system when which string is used by the game is unknown. So all the strings are just listed here with attributes s0-s36. This will change in the future.</xs:documentation>
        </xs:annotation>
        <xs:attribute name="s0" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 0. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s1" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 1. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s2" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 2. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s3" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 3. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s4" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 4. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s5" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 5. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s6" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 6. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s7" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 7. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s8" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 8. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s9" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 9. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s10" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 10. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s11" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 11. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s12" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 12. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s13" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 13. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s14" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 14. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s15" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 15. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s16" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 16. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s17" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 17. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s18" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 18. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s19" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 19. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s20" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 20. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s21" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 21. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s22" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 22. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s23" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 23. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s24" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 24. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s25" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 25. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s26" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 26. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s27" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 27. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s28" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 28. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s29" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 29. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s30" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 30. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s31" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 31. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s32" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 32. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s33" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 33. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s34" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 34. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s35" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 35. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="s36" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>Battle string 36. References a string in the strings section.</xs:documentation>
            </xs:annotation></xs:attribute>
    </xs:complexType>

    <xs:simpleType name="Nibble">
        <xs:annotation>
            <xs:documentation>
                A 4 bit value. Can be written in decimal (for example: 15), in
                hexadecimal (for example: 0xf) and in binary (for example:
                1010b)
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="0x[0-9a-fA-F]"></xs:pattern>
            <xs:pattern value="[0-1]{1,4}b"></xs:pattern>
            <xs:pattern value="(1[0-5]|0?[0-9])"></xs:pattern>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="Actions">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="print" type="Print" maxOccurs="unbounded"
                minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        This action prints one or more message strings and can
                        also alter the current squares action class and action
                        after the strings have been printed.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="check" type="Check" maxOccurs="unbounded"
                minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        The check action performs one or more checks on skills,
                        attributes, items or number of members. Depending on the
                        result of the check a message string can be printed and
                        the square action class and action can be changed.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="mask" type="Mask" maxOccurs="unbounded"
                minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        The mask action can be used to hide the real tile
                        (defined in the tilemap) with an other tile. This is
                        useful for hidden doors or stuff like this. The mask
                        action can also define that the square is impassable and
                        can print a message and change the action class and
                        action of the square when the user steps on it.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:group ref="Specials"></xs:group>
            <xs:element name="radiation" type="Radiation" minOccurs="0"
                maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        This action radiates (and damagaes) the player and can
                        also print a message and change the current squares
                        action class and action.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="transition" type="Transition"
                maxOccurs="unbounded" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        The transition action can be used to move the player to
                        an other location. It can also print a message and can
                        change the action class and action of the current tile.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="impassable" type="Impassable"
                maxOccurs="unbounded" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        This action can be used to make a square impassable. It
                        can also have a message which is displayed when the user
                        tries to enter the square.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="encounter" type="Encounter" maxOccurs="unbounded"
                minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        If this element is used in action class 3 then it
                        defines a fixed encounter. If it's used in action class
                        15 then it is used as state storage for random
                        encounters.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="loot" type="Loot" maxOccurs="unbounded"
                minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Defines a loot bag.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="dialogue" type="Dialogue" maxOccurs="unbounded"
                minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        This action defines a dialogue. It can be used to
                        interact with the player, changing the action class and
                        action to values depending on the answer of the player.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="alteration" type="Alteration" maxOccurs="unbounded" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>This action alters one or more squares in the map.</xs:documentation>
                </xs:annotation></xs:element>
        </xs:choice>
        <xs:attribute name="actionClass" type="Nibble">
            <xs:annotation>
                <xs:documentation>
                    Defines the action class for which the actions in this
                    element are used for.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="Print">
        <xs:annotation>
            <xs:documentation>This action prints one or more message strings and can also alter the current squares action class and action after the strings have been printed.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ReplaceAction">
                <xs:sequence>
                    <xs:element name="message" type="Byte" maxOccurs="unbounded" minOccurs="1">
                        <xs:annotation>
                            <xs:documentation>The message string to print.</xs:documentation>
                        </xs:annotation></xs:element>
                </xs:sequence>

                

            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <xs:complexType name="Action">
        <xs:annotation>
            <xs:documentation>The base type for all actions.</xs:documentation>
        </xs:annotation>
        <xs:attribute name="id" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>
                            The action id. This is the number used in the
                            actionMap to refer to this action.
                        </xs:documentation></xs:annotation></xs:attribute>
    </xs:complexType>

    <xs:complexType name="ReplaceAction">
        <xs:annotation>
            <xs:documentation>
                A base action for all actions which have replacement action
                class and action.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="Action">
                <xs:sequence></xs:sequence>
                <xs:attribute name="newActionClass" type="Byte">
                    <xs:annotation>
                        <xs:documentation>The new action class to set for the square after the action has been executed. 255 (0xff) means no change. This is also the default value when this attribute is not used.</xs:documentation>
                    </xs:annotation></xs:attribute>
                <xs:attribute name="newAction" type="Byte">
                    <xs:annotation>
                        <xs:documentation>The new action to set for the square after the action has been executed. 255 (0xff) means no change. This is also the default value when this attribute is not used.</xs:documentation>
                    </xs:annotation></xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Check">
        <xs:annotation>
            <xs:documentation>The check action performs one or more checks on skills, attributes, items or number of members. Depending on the result of the check a message string can be printed and the square action class and action can be changed.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="Action">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:group ref="Checks"></xs:group>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="passable" type="xs:boolean"
                    default="false">
                    <xs:annotation>
                        <xs:documentation>
                            Defines if the square is passable even without or
                            with a failed check. Defaults to false which means
                            the square is not passable without a sucessful
                            check.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="autoCheck" type="xs:boolean"
                    default="false">
                    <xs:annotation>
                        <xs:documentation>
                            Defines if this check is executed automatically or
                            if the player must "use" a skill/attrib/item to
                            trigger the check. Defaults to false (means no auto
                            check).
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="party" type="xs:boolean" default="false">
                    <xs:annotation>
                        <xs:documentation>
                            Defines if all party members are checked by this
                            check. Defaults to false which means only the first
                            viable character is checked.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="damageAll" type="xs:boolean"
                    default="false">
                    <xs:annotation>
                        <xs:documentation>
                            Defines if all characters will suffer from a failed
                            check or only the character which was used in the
                            check. Defaults to false which means only the
                            checked character will suffer.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="passAll" type="xs:boolean"
                    default="false">
                    <xs:annotation>
                        <xs:documentation>
                            Defines if all party members must pass the check for
                            the check to succeed. Defaults to false which means
                            only one character must pass the check.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="bypassArmor" type="xs:boolean"
                    default="false">
                    <xs:annotation>
                        <xs:documentation>
                            Defines if armor is ignored when calculating damage.
                            Defaults to false which means armor is not ignored.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="unknown1" type="xs:boolean"
                    default="false">
                    <xs:annotation>
                        <xs:documentation>
                            The unknown bit 1 in the check flags. If you know
                            what it does, please contact me: k@ailis.de.
                            Defaults to false.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="startMessage" type="Byte" default="0">
                    <xs:annotation>
                        <xs:documentation>
                            The message string to print when the check starts.
                            Defaults to 0 which means no message.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="passMessage" type="Byte" default="0">
                    <xs:annotation>
                        <xs:documentation>
                            The message string to print when the check passes.
                            Defaults to 0 which means no message.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="passNewActionClass" default="255"
                    type="Byte">
                    <xs:annotation>
                        <xs:documentation>
                            The new action class to set to the square when the
                            check passed.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="passNewAction" default="255" type="Byte">
                    <xs:annotation>
                        <xs:documentation>
                            The new action to set to the square when the check
                            passed.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="failMessage" type="Byte">
                    <xs:annotation>
                        <xs:documentation>
                            The message string to print when the check fails.
                            Defaults to 0 which means no message.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="failNewActionClass" default="255"
                    type="Byte">
                    <xs:annotation>
                        <xs:documentation>
                            The new action class to set to the square when the
                            check failed.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="failNewAction" default="255" type="Byte">
                    <xs:annotation>
                        <xs:documentation>
                            The new action to set to the square when the check
                            failed.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="unknown08" type="xs:string" default="0">
                    <xs:annotation>
                        <xs:documentation>
                            The unknown byte 8 in the check data. If you know
                            what it does, please contact me: k@ailis.de.
                            Defaults to 0.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="unknown09" type="xs:string" default="0">
                    <xs:annotation>
                        <xs:documentation>
                            The unknown byte 9 in the check data. If you know
                            what it does, please contact me: k@ailis.de.
                            Defaults to 0.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Skill">
        <xs:annotation>
            <xs:documentation>Defines a skill check. The value is the id of the skill to check.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="CheckData">
                <xs:sequence></xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:complexType name="CheckData">
        <xs:annotation>
            <xs:documentation>Base type for all check data types.</xs:documentation>
        </xs:annotation>
        <xs:attribute name="value" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>The value defines WHAT to check. For a skill check this is the skill id. For an attrib check this is the attribute id. For an item check, it's the item id. For a member check it's the number of members to check.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="difficulty" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>This is the difficulty of the check. Makes no sense for the members and items check so define 0 for these checks. 0 is also the default value.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="newActionClass" type="Byte">
            <xs:annotation>
                <xs:documentation>The new action class to set the square to when this specific check succeeds. If this is used then the passNewActionClass and passActionClass attributes of the parent element are ignored.
255 means no change.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="newAction" type="Byte">
            <xs:annotation>
                <xs:documentation>The new action class to set the square to when this specific check succeeds. If this is used then the passNewActionClass and passActionClass attributes of the parent element are ignored.
255 means no change.</xs:documentation></xs:annotation></xs:attribute>
    </xs:complexType>

    <xs:complexType name="Item">
        <xs:complexContent>
            <xs:extension base="CheckData">
                <xs:sequence></xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Attribute">
        <xs:complexContent>
            <xs:extension base="CheckData">
                <xs:sequence></xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:group name="Checks">
        <xs:sequence>
            <xs:element name="item" type="Item" minOccurs="0"
                maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Defines an item check. The value is the id of the item
                        to check.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="skill" type="Skill" minOccurs="0"
                maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Defines a skill check. The value is the id of the skill
                        to check.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="attribute" type="Attribute" minOccurs="0"
                maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Defines an attribute check. The value is the id of the
                        attribute to check.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="members" type="Members" maxOccurs="unbounded"
                minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Checks for a specific amount of party members.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="unknown4" type="UnknownCheck4" maxOccurs="unbounded" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Unknown check with id 4. If you know what it does. Please contact me: k@ailis.de.</xs:documentation>
                </xs:annotation></xs:element>
        </xs:sequence>
    </xs:group>

    <xs:complexType name="Mask">
        <xs:complexContent>
            <xs:extension base="ReplaceAction">
                <xs:sequence></xs:sequence>
                <xs:attribute name="tile" type="Byte" use="required">
                    <xs:annotation>
                        <xs:documentation>The tile which is drawn on this square instead of the one defined in the tilemap.</xs:documentation>
                    </xs:annotation></xs:attribute>
                <xs:attribute name="impassable" type="xs:boolean" default="false">
                    <xs:annotation>
                        <xs:documentation>
                            Defines if this square is impassable. Defaults to
                            false which means it is passable.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="message" type="Byte" default="0">
                    <xs:annotation>
                        <xs:documentation>
                            The message to print when this player steps on this
                            square. Defaults to 0 which means no message.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RangerCenter">
        <xs:complexContent>
            <xs:extension base="ReplaceAction">
                <xs:sequence></xs:sequence>
                <xs:attribute name="name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The name of the ranger center. Defaults to an empty string.</xs:documentation>
                    </xs:annotation></xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Special">
        <xs:simpleContent>
            <xs:extension base="Bytes">
                <xs:attribute name="action" type="Byte">
                    <xs:annotation>
                        <xs:documentation>
                            The id of the special action to call
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="id" type="Byte" use="required">
                    <xs:annotation>
                        <xs:documentation>The action id. This is the number used in the actionMap to refer to this action.
</xs:documentation>
                    </xs:annotation></xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:simpleType name="Bytes">
        <xs:restriction base="xs:string">
            <xs:pattern value="\s*[0-9a-fA-F]{2}(\s+[0-9a-fA-F]{2})*\s*"></xs:pattern>
        </xs:restriction>
    </xs:simpleType>

    <xs:group name="Specials">
        <xs:sequence>
            <xs:element name="rangerCenter" type="RangerCenter" minOccurs="0"
                maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        The ranger center. Please note that newActionClass and
                        newAction attributes seems to be ignored by the game.
                        Maybe a bug.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="special" type="Special" minOccurs="0"
                maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Special actions are not investigated yet. So this
                        element just defines the action id and the action data
                        for these special actions. This will change in the
                        future.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="doctor" type="Doctor" minOccurs="0"
                maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Defines a doctor with his name and prices.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="store" type="Store" maxOccurs="unbounded"
                minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Defines a store with its name, price factors and a list
                        of item types the store will buy from the player.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="library" type="Library" maxOccurs="unbounded" minOccurs="0"></xs:element>
        </xs:sequence>
    </xs:group>

    <xs:complexType name="Radiation">
        <xs:complexContent>
            <xs:extension base="ReplaceAction">
                <xs:sequence></xs:sequence>
                <xs:attribute name="message" type="Byte">
                    <xs:annotation>
                        <xs:documentation>The message to print when the player steps on the square. Defaults to 0 which means no message.</xs:documentation>
                    </xs:annotation></xs:attribute>
                <xs:attribute name="damage" type="Byte">
                    <xs:annotation>
                        <xs:documentation>Defines the damage the player will suffer when stepping on the square. Defaults to 0.</xs:documentation>
                    </xs:annotation></xs:attribute>
                <xs:attribute name="ignoreArmor" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Defines that armor will be ignored when calculating the damage. Defaults to false. Please note that this flag is tied to the message attribute. Most likely this is because of a bug in the game. It would be logical if byte 7 of the message byte would be used for the ignoreArmor flag but instead bit 0 is used. So if you set ignoreArmor to true then the message id must be an odd number. If you set it to false then message id must be an even number.</xs:documentation>
                    </xs:annotation></xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Transition">
        <xs:complexContent>
            <xs:extension base="ReplaceAction">
                <xs:sequence></xs:sequence>
                <xs:attribute name="confirm" type="xs:boolean"
                    default="false">
                    <xs:annotation>
                        <xs:documentation>
                            Defines if the transition to the new location must
                            be confirmed by the player. Defaults to false.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="relative" type="xs:boolean"
                    default="false">
                    <xs:annotation>
                        <xs:documentation>
                            Defines that x and y coordinates are relative to the
                            current position. Defaults to false.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="targetX" type="xs:byte" default="0">
                    <xs:annotation>
                        <xs:documentation>
                            The target X position on the target map. For
                            relative positioning negative values can be used as
                            well. Defaults to 0.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="targetY" type="xs:byte" default="0">
                    <xs:annotation>
                        <xs:documentation>
                            The target Y position on the target map. For
                            relative positioning negative values can be used as
                            well. Defaults to 0.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="targetMap" type="Byte" default="255">
                    <xs:annotation>
                        <xs:documentation>
                            The map to transition to. 255 is a special case: It
                            means to move to the previous map. This is also the
                            default.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="message" type="Byte">
                    <xs:annotation>
                        <xs:documentation>The message to print when transitioning. Defaults to 0 which means no message.</xs:documentation>
                    </xs:annotation></xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Impassable">
        <xs:complexContent>
            <xs:extension base="ReplaceAction">
                <xs:sequence></xs:sequence>
                <xs:attribute name="message" type="Byte" default="0">
                    <xs:annotation>
                        <xs:documentation>The message to print when the player tries to enter the square. Defaults to 0.</xs:documentation>
                    </xs:annotation></xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Encounter">
        <xs:complexContent>
            <xs:extension base="ReplaceAction">
                <xs:sequence></xs:sequence>
                <xs:attribute name="visibleDistance" type="Byte" default="0">
                    <xs:annotation>
                        <xs:documentation>
                            The distance in feet from which the player can see
                            the monster. Defaults to 0.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="hitDistance" type="Byte" default="0">
                    <xs:annotation>
                        <xs:documentation>
                            The maximum distance in feet the monster can hit you
                            from. Defaults to 0.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="message" type="Byte" default="0">
                    <xs:annotation>
                        <xs:documentation>
                            The message to print when the encounter starts.
                            Defaults to 0 which means no message.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="monster1" type="Byte" default="0">
                    <xs:annotation>
                        <xs:documentation>
                            The monster of the first group. This is a reference
                            in the monster table. Defaults to 0 which means: No
                            monster.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="maxGroupSize1" type="Byte" default="0">
                    <xs:annotation>
                        <xs:documentation>
                            Defines the maximum size of the monster group.
                            Defaults to 0 which means no monsters.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="random1" type="xs:boolean" default="false">
                    <xs:annotation>
                        <xs:documentation>
                            If the number of monsters in the group is random. If
                            this attribute is set to false then the size is
                            fixed and is always the maximum defined number of
                            monsters of the group. Defaults to false which means
                            fixed number of monsters.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="monster2" type="Byte" default="0">
                    <xs:annotation>
                        <xs:documentation>
                            The monster of the first group. This is a reference
                            in the monster table. Defaults to 0 which means: No
                            monster.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="maxGroupSize2" type="Byte" default="0">
                    <xs:annotation>
                        <xs:documentation>
                            Defines the maximum size of the monster group.
                            Defaults to 0 which means no monsters.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="random2" type="xs:boolean" default="false">
                    <xs:annotation>
                        <xs:documentation>
                            If the number of monsters in the group is random. If
                            this attribute is set to false then the size is
                            fixed and is always the maximum defined number of
                            monsters of the group. Defaults to false which means
                            fixed number of monsters.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="monster3" type="Byte" default="0">
                    <xs:annotation>
                        <xs:documentation>
                            The monster of the first group. This is a reference
                            in the monster table. Defaults to 0 which means: No
                            monster.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="maxGroupSize3" type="Byte">
                    <xs:annotation>
                        <xs:documentation>
                            Defines the maximum size of the monster group.
                            Defaults to 0 which means no monsters.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="random3" type="xs:boolean" default="false">
                    <xs:annotation>
                        <xs:documentation>
                            If the number of monsters in the group is random. If
                            this attribute is set to false then the size is
                            fixed and is always the maximum defined number of
                            monsters of the group. Defaults to false which means
                            fixed number of monsters.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="properName" type="xs:boolean" default="false">
                    <xs:annotation>
                        <xs:documentation>
                            Defines if the proper name of the monster should be
                            displayed. If this is false then on the first
                            encounter just the monster type name is displayed.
                            Defaults to false.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="friendly" type="xs:boolean" default="false">
                    <xs:annotation>
                        <xs:documentation>
                            Defines if the monster is friendly or not. If it's
                            friendly then it will not attack at once. It will
                            only attack when you attack first. Defaults to
                            false.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="unknown093" type="xs:boolean" default="false">
                    <xs:annotation>
                        <xs:documentation>
                            The unknwn bit 3 in byte 09. If you know what it
                            does, please contact me: k@ailis.de. Defaults to
                            false.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="npc" type="Byte" default="0">
                    <xs:annotation>
                        <xs:documentation>A non-zero value makes this monster an NPC which can be hired. The value is the reference in the NPC table. If the value is 0 then the monster cannot be hired. Defaults to 0.</xs:documentation>
                    </xs:annotation></xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Loot">
        <xs:complexContent>
            <xs:extension base="ReplaceAction">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:group ref="Loots"></xs:group>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:complexType name="LootItem">
        <xs:attribute name="value" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>The id of the item in the loot bag.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="quantity" type="Byte" default="1">
            <xs:annotation>
                <xs:documentation>The quantity of the item in the loot bag. Defaults to 1.</xs:documentation>
            </xs:annotation></xs:attribute>
    </xs:complexType>

    <xs:group name="Loots">
        <xs:sequence>
            <xs:choice>
                <xs:element name="item" type="LootItem">
                    <xs:annotation>
                        <xs:documentation>
                            An item in the loot bag.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="randomMoney" type="Money">
                    <xs:annotation>
                        <xs:documentation>
                            The random amount of money in the loot bag. Looks
                            like money must be ALWAYS the last item in the loot
                            bag. If you put it somewhere else you'll experience
                            strange stuff.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="fixedMoney" type="Money">
                    <xs:annotation>
                        <xs:documentation>
                            The fixed amount of money in the loot bag. Looks
                            like money must be ALWAYS the last item in the loot
                            bag. If you put it somewhere else you'll experience
                            strange stuff.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="itemGroup" type="LootItem"></xs:element>
            </xs:choice>
        </xs:sequence>
    </xs:group>

    <xs:complexType name="Money">
        <xs:attribute name="quantity" type="Word" use="required">
            <xs:annotation>
                <xs:documentation>For random money this is the maximum money. For fixed money this is the definite amount of money.
</xs:documentation>
            </xs:annotation></xs:attribute>
    </xs:complexType>

    <xs:complexType name="Doctor">
        <xs:complexContent>
            <xs:extension base="ReplaceAction">
                <xs:sequence></xs:sequence>
                <xs:attribute name="name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            The doctor's name. Defaults to empty string.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="message" type="Byte">
                    <xs:annotation>
                        <xs:documentation>
                            The greetin message to display when visiting the
                            doctor. Defaults to 0 which means no message.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="healPrice" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The healing price in USD. Defaults to 10.</xs:documentation>
                    </xs:annotation></xs:attribute>
                <xs:attribute name="examinePrice" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The examine price in USD. Defaults to 100.</xs:documentation>
                    </xs:annotation></xs:attribute>
                <xs:attribute name="curePrice" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The price in USD for curing. Defaults to 150.</xs:documentation>
                    </xs:annotation></xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Store">
        <xs:complexContent>
            <xs:extension base="ReplaceAction">
                <xs:sequence>
                    <xs:element name="itemType" type="Byte" maxOccurs="unbounded" minOccurs="1">
                        <xs:annotation>
                            <xs:documentation>The item type this store buys from the player.</xs:documentation>
                        </xs:annotation></xs:element>
                </xs:sequence>
                <xs:attribute name="name" type="xs:string" default="">
                    <xs:annotation>
                        <xs:documentation>
                            The store's name. Defaults to empty string.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="message" type="Byte" default="0">
                    <xs:annotation>
                        <xs:documentation>
                            Defines the message to display when entering the
                            store. Defaults to 0 which means no message.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="buyFactor" type="Byte" default="0">
                    <xs:annotation>
                        <xs:documentation>The buy factor. Defaults to 0.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="sellFactor" type="Byte" default="1">
                    <xs:annotation>
                        <xs:documentation>The sell factor. Defaults to 1.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="itemList" type="Byte" default="0">
                    <xs:annotation>
                        <xs:documentation>The item list this store uses. Defaults to 0.</xs:documentation>
                    </xs:annotation></xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Dialogue">
        <xs:complexContent>
            <xs:extension base="Action">
                <xs:sequence>
                    <xs:element name="answer" type="Answer" maxOccurs="unbounded" minOccurs="1">
                        <xs:annotation>
                            <xs:documentation>An answer in a dialogue.</xs:documentation>
                        </xs:annotation></xs:element>
                </xs:sequence>
                <xs:attribute name="menu" type="xs:boolean" default="false">
                    <xs:annotation>
                        <xs:documentation>
                            If this attribute is true then the conversation with
                            the player is done via a menu instead of typing
                            words. Defaults to false which means typing words is
                            used for conversation.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="message" type="Byte" default="0">
                    <xs:annotation>
                        <xs:documentation>
                            The starting message of the dialogue. Defaults to 0
                            which means no message.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="cancelNewActionClass" type="Byte" default="255">
                    <xs:annotation>
                        <xs:documentation>The action class to apply to the square if the player cancels the dialogue. Defaults to 255 which means no change.</xs:documentation>
                    </xs:annotation></xs:attribute>
                <xs:attribute name="cancelNewAction" type="Byte" default="255">
                    <xs:annotation>
                        <xs:documentation>The action to apply to the square if the player cancels the dialogue. Defaults to 255 which means no change.</xs:documentation>
                    </xs:annotation></xs:attribute>
                <xs:attribute name="otherNewActionClass" type="Byte" default="255">
                    <xs:annotation>
                        <xs:documentation>The action class to apply to the square if the player answers with an invalid answer. Defaults to 255 which means no change.</xs:documentation>
                    </xs:annotation></xs:attribute>
                <xs:attribute name="otherNewAction" type="Byte" default="255">
                    <xs:annotation>
                        <xs:documentation>The action to apply to the square if the player answers with an invalid answer. Defaults to 255 which means no change.</xs:documentation>
                    </xs:annotation></xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Answer">
        <xs:attribute name="message" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>The answer message string.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="newActionClass" type="Byte" default="255">
            <xs:annotation>
                <xs:documentation>The new action class to apply to the square if this answer is selected. Defaults to 255 which means no change.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="newAction" type="Byte" default="255">
            <xs:annotation>
                <xs:documentation>The new action to apply to the square if this answer is selected. Defaults to 255 which means no change.</xs:documentation>
            </xs:annotation></xs:attribute>
    </xs:complexType>

    <xs:complexType name="Alteration">
        <xs:complexContent>
            <xs:extension base="ReplaceAction">
                <xs:sequence>
                    <xs:element name="alter" type="Alter" maxOccurs="unbounded" minOccurs="1"></xs:element>
                </xs:sequence>
                <xs:attribute name="message" type="Byte">
                    <xs:annotation>
                        <xs:documentation>The message to print when the alteration is done. Defaults to 0 which means no change.</xs:documentation>
                    </xs:annotation></xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Alter">
        <xs:attribute name="unknown" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>
                    The unknown bits 1-6 in the flags byte. If you know what
                    they mean, please contact me: k@ailis.de. Defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="relative" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>
                    Defines if the coordinates are relative to the current
                    position. Defaults to false.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="x" type="xs:byte" default="0">
            <xs:annotation>
                <xs:documentation>
                    The x position of the square to alter. Defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="y" type="xs:byte" default="0">
            <xs:annotation>
                <xs:documentation>
                    The y position of the square to alter. Defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="newActionClass" type="Byte" default="255">
            <xs:annotation>
                <xs:documentation>New new action class to apply to the square at the given position. Defaults to 255 which means no change.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="newAction" type="Byte" default="255">
            <xs:annotation>
                <xs:documentation>New new action to apply to the square at the given position. Defaults to 255 which means no change.</xs:documentation>
            </xs:annotation></xs:attribute>
    </xs:complexType>

    <xs:complexType name="NPCs">
        <xs:sequence>
            <xs:element name="character" type="Character" maxOccurs="unbounded" minOccurs="0"></xs:element>
        </xs:sequence></xs:complexType>

    <xs:complexType name="Character">
        <xs:sequence>
            <xs:element name="skills" type="Skills" maxOccurs="1"
                minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The skills of the character.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="items" type="Items" maxOccurs="1"
                minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The items of the character.                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="id" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>
                    The character id. For NPCs this is the id which must be used
                    in fixed encounter data to connect a fixed encounter to a
                    NPC. For the savegame this is just the position of the
                    character in the savegame.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="name" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>The character name.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="strength" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>The strength attribute</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="iq" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>The iq attribute</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="luck" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>The luck attribute</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="speed" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>The speed attribute</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="agility" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>The agility attribute</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="dexterity" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>The dexterity attribute</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="charisma" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>The charisma attribute</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="money" type="Int3" default="0">
            <xs:annotation>
                <xs:documentation>
                    The money the character possesses. Defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="gender" default="male">
            <xs:annotation>
                <xs:documentation>
                    The characters gender. Can either be male or female.
                    Defaults to male.
                </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="male"></xs:enumeration>
                    <xs:enumeration value="female"></xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="nationality" default="US">
            <xs:annotation>
                <xs:documentation>
                    The characters nationality. Defaults to US.
                </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="US"></xs:enumeration>
                    <xs:enumeration value="Russian"></xs:enumeration>
                    <xs:enumeration value="Mexican"></xs:enumeration>
                    <xs:enumeration value="Indian"></xs:enumeration>
                    <xs:enumeration value="Chinese"></xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="ac" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>
                    The armor class. Defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="maxCon" type="Word" use="required">
            <xs:annotation>
                <xs:documentation>The maximum condition.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="con" type="Word" use="required">
            <xs:annotation>
                <xs:documentation>The current condition</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="weapon" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>
                    The selected weapon. 0 means no selected weapon. This is
                    also the default.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="skillPoints" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>
                    The skill points. Defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="experience" type="Int3" default="0">
            <xs:annotation>
                <xs:documentation>
                    The experience points. Defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="level" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>The level. Defaults to 1.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="armor" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>
                    The selected armor. Defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="lastCon" type="Word" default="0">
            <xs:annotation>
                <xs:documentation>
                    The last condition before the character got unconscious.
                    Defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="afflictions" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>
                    The afflictions as a bitmap. Representation of the
                    afflictions may change in the future. Defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="npc" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>If the character is a NPC. Defaults to false.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="unknown2A" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>
                    The unknown byte at position 0x2a. If you know what it does
                    then please contact me: k@ailis.de. Defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="itemRefuse" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>
                    Defines how likely the character will refuse using items.
                    Defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="skillRefuse" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>
                    Defines how likely the character will refuse using skills.
                    Defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="attribRefuse" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>
                    Defines how likely the character will refuse using
                    attributes. Defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="tradeRefuse" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>
                    Defines how likely the character will refuse trading items.
                    Defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="unknown2F" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>
                    The unknown byte at position 0x2f. If you know what it does
                    then please contact me: k@ailis.de. Defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="joinString" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>
                    The string to display when the npc joins the party. Defaults
                    to 0 meaning no message.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="willingness" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>
                    Willingness to carry out a "Use" command. Defaults to 0.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="rank" type="xs:string" default="Private">
            <xs:annotation>
                <xs:documentation>Text form of the rank. Defaults to "Private"</xs:documentation>
            </xs:annotation></xs:attribute>
    </xs:complexType>

    <xs:complexType name="CharSkill">
        <xs:attribute name="id" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>The skill id.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="level" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>The skill level.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="special" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>Defines if the skill is a special skill. Normally every NPC has a special skill so skill checks can check for a specific NPC. Defaults to false.</xs:documentation>
            </xs:annotation></xs:attribute>
    </xs:complexType>

    <xs:complexType name="CharItem">
        <xs:attribute name="id" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>The item id.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="load" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>The load of the item (For example the ammunition of a gun). Defaults to 0.</xs:documentation>
            </xs:annotation></xs:attribute>
    </xs:complexType>


    <xs:simpleType name="Int3">
        <xs:restriction base="xs:string">
            <xs:pattern
                value="(1677721[0-5]|1677710[0-9]|16776[0-1][0-9]{3}|1676[0-7][0-9]{4}|166[0-7][0-9]{5}|15[0-7][0-9]{6}|[0]?[0-9]{0,7})">
            </xs:pattern>
            <xs:pattern value="0x[0-9a-fA-F]{6}"></xs:pattern>
            <xs:pattern value="[0-1]{1,24}b"></xs:pattern>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="Skills">
        <xs:sequence>
            <xs:element name="skill" type="CharSkill" maxOccurs="unbounded" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>A skill.</xs:documentation>
                </xs:annotation></xs:element>
        </xs:sequence></xs:complexType>

    <xs:complexType name="Items">
        <xs:sequence>
            <xs:element name="item" type="CharItem" maxOccurs="unbounded" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>An item</xs:documentation>
                </xs:annotation></xs:element>
        </xs:sequence></xs:complexType>

    <xs:complexType name="Monsters">
        <xs:sequence>
            <xs:element name="monster" type="Monster" maxOccurs="unbounded" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>A monster.</xs:documentation>
                </xs:annotation></xs:element>
        </xs:sequence></xs:complexType>

    <xs:complexType name="Monster">
        <xs:sequence></xs:sequence>
        <xs:attribute name="id" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>The monster id. Used to refer to the monster in the actions.
</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="name" type="xs:string" default="">
            <xs:annotation>
                <xs:documentation>The monster name. Defaults to an empty string.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="experience" type="Word" default="0">
            <xs:annotation>
                <xs:documentation>The experience points the killer of this monster earns. Also used for calculating hit points. Defaults to 0.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="ac" type="Nibble" default="0">
            <xs:annotation>
                <xs:documentation>Multiplier for experience points. Also affects the AC of the monster. Defaults to 0.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="skill" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>How good the monster is skilled. The higher the value the better it is. Defaults to 0.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="fixedDamage" type="Nibble" default="0">
            <xs:annotation>
                <xs:documentation>The fixed amount of damage. Defaults to 0.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="randomDamage" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>The random amount of additional damage in D6. Defaults to 0.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="maxGroupSize" type="Nibble" default="0">
            <xs:annotation>
                <xs:documentation>The maximum group size. Defaults to 0.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="weaponType" type="Nibble" default="0">
            <xs:annotation>
                <xs:documentation>The weapon type. Defaults to 0.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="monsterType" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>The monster type. Defaults to 0. Animal=1, Mutant=2, Humanoid=3, Cyborg=4, Robot=5</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="picture" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>The picture of the monster. Defaults to 0.</xs:documentation>
            </xs:annotation></xs:attribute>
    </xs:complexType>

    <xs:complexType name="Strings">
        <xs:sequence>
            <xs:element name="string" type="String" maxOccurs="unbounded" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>A message string.</xs:documentation>
                </xs:annotation></xs:element>
        </xs:sequence></xs:complexType>



    <xs:complexType name="String">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="id" type="Byte" use="required">
                    <xs:annotation>
                        <xs:documentation>The message id</xs:documentation>
                    </xs:annotation></xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="TileMap">
        <xs:simpleContent>
            <xs:extension base="ByteMap">
                <xs:attribute name="unknown" type="Word" default="0">
                    <xs:annotation>
                        <xs:documentation>The unknown word in the header of the tilemap. Defaults to 0. If you know what it does, please contact me: k@ailis.de</xs:documentation>
                    </xs:annotation></xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="Members">
        <xs:complexContent>
            <xs:extension base="CheckData">
                <xs:sequence></xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="UnknownCheck4">
        <xs:complexContent>
            <xs:extension base="CheckData">
                <xs:sequence></xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Library">
        <xs:complexContent>
            <xs:extension base="ReplaceAction">
                <xs:sequence>
                    <xs:element name="skill" type="Byte" maxOccurs="unbounded"
                        minOccurs="1">
                        <xs:annotation>
                            <xs:documentation>The skills that can be learned at this library.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>

                <xs:attribute name="name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The library name. Defaults to empty string.</xs:documentation>
                    </xs:annotation></xs:attribute>

                <xs:attribute name="message" type="Byte">
                    <xs:annotation>
                        <xs:documentation>The welcome message of the library. Defaults to 0 which means no string.</xs:documentation>
                    </xs:annotation></xs:attribute>

            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="savegame" type="Savegame">
        <xs:annotation>
            <xs:documentation>The root element of a savegame.</xs:documentation>
        </xs:annotation></xs:element>

    <xs:complexType name="Savegame">
        <xs:sequence>
            <xs:element name="parties" type="Parties">
                <xs:annotation>
                    <xs:documentation>The parties.</xs:documentation>
                </xs:annotation></xs:element>
            <xs:element name="unknown38" type="Bytes">
                <xs:annotation>
                    <xs:documentation>Unknown bytes at offset 0x38. If you know what they do, please tell me: k@ailis.de.</xs:documentation>
                </xs:annotation></xs:element>
            <xs:element name="unknown7A" type="Bytes">
                <xs:annotation>
                    <xs:documentation>Unknown bytes at offset 0x7A. If you know what they do, please tell me: k@ailis.de.</xs:documentation>
                </xs:annotation></xs:element>
            <xs:element name="unknown7F" type="Bytes">
                <xs:annotation>
                    <xs:documentation>Unknown bytes at offset 0x7F. If you know what they do, please tell me: k@ailis.de.</xs:documentation>
                </xs:annotation></xs:element>
            <xs:element name="unknown82" type="Bytes">
                <xs:annotation>
                    <xs:documentation>Unknown bytes at offset 0x82. If you know what they do, please tell me: k@ailis.de.</xs:documentation>
                </xs:annotation></xs:element>
            <xs:element name="unknown85" type="Bytes">
                <xs:annotation>
                    <xs:documentation>Unknown bytes at offset 0x85. If you know what they do, please tell me: k@ailis.de.</xs:documentation>
                </xs:annotation></xs:element>
            <xs:element name="unknownF9" type="Bytes">
                <xs:annotation>
                    <xs:documentation>Unknown bytes at offset 0xF9. If you know what they do, please tell me: k@ailis.de.</xs:documentation>
                </xs:annotation></xs:element>
            <xs:element name="characters" type="Characters">
                <xs:annotation>
                    <xs:documentation>The characters.</xs:documentation>
                </xs:annotation></xs:element>
        </xs:sequence>
        <xs:attribute name="time" type="Time" default="12:00">
            <xs:annotation>
                <xs:documentation>The current time of the game. Defaults to 12:00</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="serial" type="xs:long" default="0">
            <xs:annotation>
                <xs:documentation>The serial number of the game. The game always uses the savegame with the highest serial number. Defaults to 0.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    <xs:simpleType name="Time">
        <xs:restriction base="xs:string">
            <xs:pattern value="(2[0-3]|[0-1][0-9]):[0-5][0-9]"></xs:pattern>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:complexType name="Parties">
        <xs:sequence>
            <xs:element name="party" type="Party" minOccurs="1" maxOccurs="4">
                <xs:annotation>
                    <xs:documentation>A party definition in the savegame.</xs:documentation>
                </xs:annotation></xs:element>
        </xs:sequence>
        <xs:attribute name="currentParty" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>The active party. References a party by it's id. Defaults to 0.</xs:documentation>
            </xs:annotation></xs:attribute>
    </xs:complexType>

    <xs:complexType name="Characters">
        <xs:sequence>
            <xs:element name="character" type="Character" minOccurs="1" maxOccurs="7">
                <xs:annotation>
                    <xs:documentation>A character in the savegame.</xs:documentation>
                </xs:annotation></xs:element>
        </xs:sequence></xs:complexType>

    <xs:complexType name="Party">
        <xs:sequence>
            <xs:element name="member" type="Byte" minOccurs="0" maxOccurs="7">
                <xs:annotation>
                    <xs:documentation>A member in the party. References the id of a character.</xs:documentation>
                </xs:annotation></xs:element>
        </xs:sequence>
        <xs:attribute name="id" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>The party id. First party must have id 0.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="x" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>The X position on the map.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="y" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>The Y position on the map.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="map" type="Byte" use="required">
            <xs:annotation>
                <xs:documentation>The map the party is currently on.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="prevX" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>The previous X position before transitioning to new location. Used for FF transitions. Defaults to 0.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="prevY" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>The previous Y position before transitioning to new location. Used for FF transitions. Defaults to 0.</xs:documentation>
            </xs:annotation></xs:attribute>
        <xs:attribute name="prevMap" type="Byte" default="0">
            <xs:annotation>
                <xs:documentation>The previous map before transitioning to new location. Used for FF transitions. Defaults to 0.</xs:documentation>
            </xs:annotation></xs:attribute>
    </xs:complexType>
</xs:schema>
